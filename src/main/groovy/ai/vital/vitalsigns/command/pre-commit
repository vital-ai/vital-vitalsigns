#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.


owlfiles=$(git diff --cached --name-only | grep "^.*\.owl$")

is_ok=0

while read -r line ; do

	if [ -z "$line" ] ; then
		continue
	fi

    echo "Testing OWL file: $line ..."
    
    if [ ! -f $line ] ; then
    	echo "OWL file does not exist - skipping"
		continue
	fi
	
    vres=$($VITAL_HOME/vitalsigns/bin/vitalsigns validateontology -o $line 2>&1)
    
    is_ok=0
    
    
    while read -r line2 ; do
    
      if [ "OK" == "$line2" ] ; then
      
       is_ok=1
      
      fi
    
    done <<< "$vres"
    
    
    if [ $is_ok == 0 ] ; then
    
      echo "OWL file $line failed:"
      echo $vres
      
      exit 1
    
    fi
    
	#just re-add the file again
    git add $line
    
done <<< "$owlfiles"


#now verify the domain owl and jar files structure

statusres=$($VITAL_HOME/vitalsigns/bin/vitalsigns mergestatus 2>&1)

is_ok=0

while read -r line3 ; do
    
	if [ "OK" == "$line3" ] ; then
      
    	is_ok=1
      
	fi
    
done <<< "$statusres"

if [ $is_ok == 0 ] ; then
    
  echo "OWL and jar files validation failed:"
  echo $statusres
      
  exit 1
    
fi

